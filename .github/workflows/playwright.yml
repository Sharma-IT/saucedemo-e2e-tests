name: Playwright Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: 'Playwright Tests'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3]
    
    env:
      CI: true

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
    
    - name: Cache npm dependencies
      uses: actions/cache@v3
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-20-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-20-
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Cache Playwright browsers
      uses: actions/cache@v3
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-playwright-
    
    - name: Run Playwright tests
      run: npx playwright test --shard ${{ matrix.shard }}/3
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-shard-${{ matrix.shard }}
        path: |
          test-results/
          playwright-report/
          junit.xml
        retention-days: 30
    
    - name: Publish Test Report
      if: always()
      uses: mikepenz/action-junit-report@v3
      with:
        report_paths: 'test-results/junit.xml'
        detailed_summary: true
        check_name: 'Test Report - Shard ${{ matrix.shard }}'

  test-summary:
    name: 'Test Summary'
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      
      - name: Merge test reports
        run: |
          find . -name "junit.xml" -exec cat {} \; > merged-junit.xml
      
      - name: Publish Combined Test Report
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: 'merged-junit.xml'
          detailed_summary: true
          check_name: 'Combined Test Report'
